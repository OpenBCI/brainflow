@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/@targets_export_name@.cmake")
include("${CMAKE_CURRENT_LIST_DIR}/@targets_export_name_config@.cmake")
check_required_components("@PROJECT_NAME@")

# in theory with lines above you can write smth like:
# target_link_libraries (target brainflow::GetData brainflow::BoardController)
# directly in dependend package CMakeLists.txt after find_package
# but it doesn't link libraries so it leads to linking error and I have no idea why
# workaround - set variables for include and library path and use these variables in package consumer code

set (@PROJECT_NAME@_INCLUDE_DIRS @package_inc_install_dir@)
set (@PROJECT_NAME@_LIBRARY_DIRS @package_lib_install_dir@)

find_library (
    BoardControllerPath
    BoardController libBoardController
    PATHS @package_lib_install_dir@
)

find_library (
    GetDataPath
    GetData libGetData
    PATHS @package_lib_install_dir@
)
