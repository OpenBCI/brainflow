Build Instructions
==================

Common requirements
----------------------

- Windows >= 8.1/Linux/MacOS
- On Windows we support x86/x64 libraries, for MacOS and Linux - only x64 bit libraries, if you need 32bit libraries for Linux you should compile them by yourself
- For Ganglion on Windows if you dont compile brainflow by yorself you may need to install `redist_x64 <https://aka.ms/vs/16/release/vc_redist.x64.exe>`_ or `redist_x86 <https://aka.ms/vs/16/release/vc_redist.x86.exe>`_  (but more likely you have it preinstalled) to use built-in Bluetooth API also you need Windows >= 10
- For Ganglion on Linux/MacOS you need to use dongle, for Windows dongle is not required if you have Bluetooth on your laptop

Compilation (Core module)
---------------------------

Windows
~~~~~~~

- Install CMAKE>=3.10 you can install it from PYPI via pip
- Install Visual Studio 2017
- run ./tools/build_win64.cmd or ./tools/build_win32.cmd from project directory, if you wanna use another version of Visual Studio you will need to change generator in cmake command line

Linux
~~~~~~
- Install CMAKE>=3.10 you can install it from PYPI via pip
- If you wanna distribute compiled Linux linraries you HAVE to build it inside manylinux Docker container (or just use compiled by us libraries from release page)
- run .\\tools\\build_linux.sh

MacOS
~~~~~~~
Exactly the same as for Linux but if you want to distribute compiled libraries and run them on another MacOS version you need to build them in older MacOS and rely on backward compatibility (or again just use compiled by us libs)

Python
-------

.. compound::

    After compilation of BrainFlow's core module you need to run ::

       	cd python-package
      	python -m pip install -e .

.. compound::

    Also you are able to install latest release from PYPI ::

      	python -m pip install brainflow

If you compile core module on your own local Windows/Linux/MacOS machine and build whl file from it, this whl file will not work on another OS because there will be no native libraries for other platforms!
You need to build libraries for other OSes and put them to correct folder or use CI to build it.

R
-----

R binding is based on `reticulate <https://rstudio.github.io/reticulate/>`_ package and calls python code, so you need to install Python binding first, if you install it in virtualenv make sure that reticulate use correct virtualenv, after that you will be able to build R package from command line or using R Studio, install it and run samples

Java
-----

.. compound::

    After compilation of BrainFlow's core module you need to install maven and run ::

       	cd java-package
      	mvn package

Also you can download jar files with all dependencies inside directly from `release page <https://github.com/OpenBCI/brainflow/releases>`_

If you compile core module on your own local Windows/Linux/MacOS machine and build jar file from it, this jar file will not work on another OS because there will be no native libraries for other platforms!
You need to build libraries for other OSes and put them to correct folder or use jar file generated by CI pipeline.

C#
----

For C# only Windows is currently supported

You can download latest release from `Nuget <https://www.nuget.org/packages/brainflow/>`_ or build it youself:

- Compile BrainFlow's core module
- open Visual Studio Solution
- install required nuget packages
- build it using Visual Studio
- make sure that unmanaged libraries exist in search Path

Unity Integration
~~~~~~~~~~~~~~~~~~

- build C# package
- copy managed DLLs to the Assets folder of your Unity project
- copy unmanaged DLLS to project folder to use it with Unity player
- after building Unity project copy unmanaged DLLs to exe folder
